{"version":3,"file":"component---src-pages-saved-js-1c962b13bfed94ccb558.js","mappings":"qLAWA,EATc,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAEvB,OACI,wBAAMA,UAAS,SAAWA,GACrBD,ICAE,SAASE,EAAT,GAA4I,IAAjHC,EAAgH,EAAhHA,OAAQC,EAAwG,EAAxGA,IAAwG,IAAnGC,UAAAA,OAAmG,aAAhFC,YAAAA,OAAgF,MAAlE,GAAkE,EAA9DN,EAA8D,EAA9DA,SAA8D,IAApDO,QAAAA,OAAoD,MAA1C,CAAC,MAAO,QAAkC,EAAzBC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WAElIC,EAAqB,SAAC,GAAgB,IAAfV,EAAc,EAAdA,SACzB,OAAGK,EAEK,uBAAKA,UAAWA,EAAWC,YAAa,SAACK,GAAD,OAAOL,EAAYK,EAAGR,EAAQC,IAAMH,UAAU,mBAAmBW,UAAWT,EAAOU,GAAIA,GAAIV,EAAOU,IACrIb,GAKT,uBAAKC,UAAU,mBAAmBW,UAAWT,EAAOU,GAAIA,GAAIV,EAAOU,IAC9Db,IAKb,OACI,gBAACU,EAAD,KAEI,gBAACI,EAAA,EAAD,CACIX,OAAQA,EACRI,QAASA,EACTE,WAAYA,EACZD,UAAW,kBAAMA,EAAUL,MAG/B,gBAAC,KAAD,CAAMY,GAAE,WAAaZ,EAAOU,GAAMG,MAAO,CAAEC,aAAcd,EAAOU,KAC5D,uBAAKZ,UAAU,iBACX,uBAAKiB,IAAKf,EAAOgB,MAAOC,IAAKjB,EAAOkB,UAI5C,uBAAKpB,UAAU,iBAAiBqB,QAAQ,KACpC,uBAAKrB,UAAU,cACVE,EAAOoB,UAAUC,KAAI,SAACC,EAAMC,GACzB,OAAO,gBAAC,EAAD,CAAOC,IAAKD,GAAQD,OAInC,gBAAC,KAAD,CAAMV,GAAE,WAAaZ,EAAOU,GAAMG,MAAO,CAAEC,aAAcd,EAAOU,KAAM,0BAAKV,EAAOkB,QAEjFrB,M,+DCXjB,IA5BmB,SAAC,GAAkE,IAAhE4B,EAA+D,EAA/DA,QAA+D,IAAtDrB,QAAAA,OAAsD,MAA5C,CAAC,MAAO,QAAoC,EAA3BE,EAA2B,EAA3BA,WAAYD,EAAe,EAAfA,UAElE,GAAsCqB,EAAAA,EAAAA,UAAS,IAAxCC,EAAP,KAAoBC,EAApB,KAEMC,EAAuB,SAAC7B,GAC1B4B,EAAe5B,GACf8B,SAASC,eAAe,mBAAmBC,MAAMC,QAAU,QAG/D,OAAGR,EAAQS,OAEH,gCACI,gBAAC,IAAD,CAAelC,OAAQ2B,EAAatB,UAAWA,IAC/C,uBAAKP,UAAU,eACV2B,EAAQJ,KAAI,SAAArB,GACT,OACI,gBAAC,IAAD,CAAiBwB,IAAKxB,EAAOU,GAAIV,OAAQA,EAAQI,QAASA,EAASE,WAAYA,EAAYD,UAAWwB,SAQ1H,8D,6GCtBFM,EAAYC,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,mBA4Bf,UAxByB,WAErB,OAAwCC,EAAAA,EAAAA,GAAgB,IAAjDC,EAAP,KAAqBC,EAArB,KACA,GAAgCC,EAAAA,EAAAA,GAAY,IAA3BC,GAAjB,WAMA,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,wBAAM3C,UAAU,kBAChB,8CACA,wBAAM4C,KAAK,OAAOC,KAAK,2BAE3B,gBAAC,IAAD,CAAWxB,QAAQ,kBACf,gBAACgB,EAAD,sBACA,gBAAC,IAAD,CAAYV,QAASa,EAAclC,QAAS,CAAC,QAASE,WAAYiC,EAAiBlC,UAb7E,SAACL,GACfyC,EAAYzC","sources":["webpack://meal-planning/./src/components/Badge.js","webpack://meal-planning/./src/components/recipes/RecipeContainer.js","webpack://meal-planning/./src/components/recipes/RecipeGrid.js","webpack://meal-planning/./src/pages/saved.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Badge = ({ children, className }) => {\n\n    return (\n        <span className={`badge ${className}`}>\n            {children}\n        </span>\n    )\n}\n\nexport default Badge","import React from 'react'\nimport { Link } from \"gatsby\"\n\nimport RecipeActions from './RecipeActions'\nimport Badge from \"../Badge\"\n\nexport default function RecipeContainer({ recipe, day, draggable = false, onDragStart = \"\", children, actions = ['add', 'save'], addRecipe, saveRecipe }) {\n\n    const RecipeContainerDiv = ({children}) => {\n        if(draggable) {\n            return (\n                <div draggable={draggable} onDragStart={(e) => onDragStart(e, recipe, day)} className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                    {children}\n                </div>\n            )\n        }\n        return (\n            <div className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                {children}\n            </div>\n        )\n    }\n\n    return (\n        <RecipeContainerDiv>\n\n            <RecipeActions\n                recipe={recipe}\n                actions={actions}\n                saveRecipe={saveRecipe}\n                addRecipe={() => addRecipe(recipe)}\n            />\n\n            <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}>\n                <div className=\"image-wrapper\">\n                    <img src={recipe.image} alt={recipe.title} />\n                </div>\n            </Link>\n\n            <div className=\"recipe-details\" padding=\"0\">\n                <div className=\"dish-types\">\n                    {recipe.dishTypes.map((type, index) => {\n                        return <Badge key={index}>{type}</Badge>\n                    })}\n                </div>\n\n                <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}><h3>{recipe.title}</h3></Link>\n\n                {children}\n                \n            </div>\n\n        </RecipeContainerDiv>\n    )\n}\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport RecipeContainer from \"./RecipeContainer\";\nimport MealPlanModal from \"./MealPlanModal\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst RecipeGrid = ({ recipes, actions = ['add', 'save'], saveRecipe, addRecipe}) => {\n\n    const [modalRecipe, setModalRecipe] = useState([]);\n\n    const triggerMealPlanModal = (recipe) => {\n        setModalRecipe(recipe);\n        document.getElementById(\"meal-plan-modal\").style.display = \"flex\";\n    }\n\n    if(recipes.length) {\n        return (\n            <>\n                <MealPlanModal recipe={modalRecipe} addRecipe={addRecipe} />\n                <div className=\"recipe-grid\">\n                    {recipes.map(recipe => {\n                        return (\n                            <RecipeContainer key={recipe.id} recipe={recipe} actions={actions} saveRecipe={saveRecipe} addRecipe={triggerMealPlanModal} />\n                        );\n                    })}\n                </div>\n            </>\n        )\n    }\n    return (\n        <p>You have not saved any recipes.</p>\n    )\n}\n\nexport default RecipeGrid\n","import React from 'react'\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport RecipeGrid from '../components/recipes/RecipeGrid';\n\nimport useSavedRecipes from '../hooks/useSavedRecipes';\nimport useMealPlan from '../hooks/useMealPlan';\n\nconst PageTitle = styled.h1`\n    margin-top: 0;\n`;\n\nconst SavedRecipesPage = () => {\n\n    const [savedRecipes, setSavedRecipes] = useSavedRecipes([]);\n    const [mealPlan, setMealPlan] = useMealPlan([]);\n\n    const addRecipe = (recipe) => {\n        setMealPlan(recipe);\n    }\n\n    return (\n        <Layout>\n            <Helmet>\n                <body className=\"saved-recipes\" />\n                <title>Saved Recipes</title>\n                <meta name=\"icon\" href=\"../images/favicon.png\" />\n            </Helmet>\n            <Container padding=\"20px 40px 40px\">\n                <PageTitle>Saved Recipes</PageTitle>\n                <RecipeGrid recipes={savedRecipes} actions={['save']} saveRecipe={setSavedRecipes} addRecipe={addRecipe} />\n            </Container>\n        </Layout>\n    )\n}\n\nexport default SavedRecipesPage\n"],"names":["children","className","RecipeContainer","recipe","day","draggable","onDragStart","actions","addRecipe","saveRecipe","RecipeContainerDiv","e","recipe_id","id","RecipeActions","to","state","activeRecipe","src","image","alt","title","padding","dishTypes","map","type","index","key","recipes","useState","modalRecipe","setModalRecipe","triggerMealPlanModal","document","getElementById","style","display","length","PageTitle","styled","useSavedRecipes","savedRecipes","setSavedRecipes","useMealPlan","setMealPlan","name","href"],"sourceRoot":""}