{"version":3,"file":"component---src-pages-meal-plan-js-7d2f7fae08cd67507fe5.js","mappings":"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","sources":["webpack://meal-planning/./src/components/Badge.js","webpack://meal-planning/./src/components/recipes/RecipeContainer.js","webpack://meal-planning/./src/pages/meal-plan.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Badge = ({ children, className }) => {\n\n    return (\n        <span className={`badge ${className}`}>\n            {children}\n        </span>\n    )\n}\n\nexport default Badge","import React from 'react'\nimport { Link } from \"gatsby\"\n\nimport RecipeActions from './RecipeActions'\nimport Badge from \"../Badge\"\n\nexport default function RecipeContainer({ recipe, day, draggable = false, onDragStart = \"\", children, actions = ['add', 'save'], addRecipe, saveRecipe }) {\n\n    const RecipeContainerDiv = ({children}) => {\n        if(draggable) {\n            return (\n                <div draggable={draggable} onDragStart={(e) => onDragStart(e, recipe, day)} className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                    {children}\n                </div>\n            )\n        }\n        return (\n            <div className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                {children}\n            </div>\n        )\n    }\n\n    return (\n        <RecipeContainerDiv>\n\n            <RecipeActions\n                recipe={recipe}\n                actions={actions}\n                saveRecipe={saveRecipe}\n                addRecipe={() => addRecipe(recipe)}\n            />\n\n            <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}>\n                <div className=\"image-wrapper\">\n                    <img src={recipe.image} alt={recipe.title} />\n                </div>\n            </Link>\n\n            <div className=\"recipe-details\" padding=\"0\">\n                <div className=\"dish-types\">\n                    {recipe.dishTypes.map((type, index) => {\n                        return <Badge key={index}>{type}</Badge>\n                    })}\n                </div>\n\n                <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}><h3>{recipe.title}</h3></Link>\n\n                {children}\n                \n            </div>\n\n        </RecipeContainerDiv>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport RecipeContainer from '../components/recipes/RecipeContainer';\n\nimport useMealPlan from '../hooks/useMealPlan';\n\nconst PageTitle = styled.h1`\n    margin-top: 0;\n`;\n\nconst MealPlanPage = () => {\n\n    const [mealPlan, setMealPlan] = useMealPlan([]);\n\n    const allowDrop = (e) => {\n        e.preventDefault();\n    }\n\n    const drag = (e, recipe, day) => {\n        e.dataTransfer.setData(\"recipe\", JSON.stringify(recipe));\n        e.dataTransfer.setData(\"day\", day);\n    }\n\n    const drop = (e) => {\n\n        e.preventDefault();\n        const recipe = JSON.parse(e.dataTransfer.getData(\"recipe\"));\n        const day = e.dataTransfer.getData(\"day\");\n        const newDay = e.currentTarget.getAttribute(\"day\");\n        e.currentTarget.append(document.getElementById(recipe.id));\n\n        setMealPlan(recipe, { previous: day, new: newDay }, \"update\");\n\n    } \n\n    const MealPlanGrid = () => {\n        \n        const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\n        return days.map(day => {\n            if (mealPlan[day]) {\n                return (\n                    <div key={day} day={day} className=\"day-container\" onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\n                        <h2>{day}</h2>\n                        {mealPlan[day].map(recipe => {\n                            return (\n                                <RecipeContainer draggable={true} day={day} onDragStart={drag} actions={false} recipe={recipe} key={recipe.id} >\n                                    <span role=\"button\" id=\"delete-recipe\" onClick={(e) => setMealPlan(recipe, day, \"delete\")}>Delete</span>\n                                </RecipeContainer>\n                            )\n                        })}\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={day} day={day} className=\"day-container\" onDrop={(e) => drop(e)} onDragOver={(e) => allowDrop(e)}>\n                        <h2>{day}</h2>\n                    </div>\n                )\n            }\n        })\n\n    }\n\n    return (\n        <Layout>\n            <Helmet>\n                <body className=\"meal-plan\" />\n                <title>Meal Plan</title>\n                <meta name=\"icon\" href=\"../images/favicon.png\" />\n            </Helmet>\n            <Container padding=\"20px 40px 40px\">\n                <PageTitle>Meal Plan</PageTitle>\n                <div className=\"meal-plan-container\">\n                    <MealPlanGrid />\n                </div>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default MealPlanPage\n"],"names":["children","className","RecipeContainer","recipe","day","draggable","onDragStart","actions","addRecipe","saveRecipe","RecipeContainerDiv","e","recipe_id","id","RecipeActions","to","state","activeRecipe","src","image","alt","title","padding","dishTypes","map","type","index","key","PageTitle","styled","useMealPlan","mealPlan","setMealPlan","allowDrop","preventDefault","drag","dataTransfer","setData","JSON","stringify","drop","parse","getData","newDay","currentTarget","getAttribute","append","document","getElementById","previous","new","MealPlanGrid","onDrop","onDragOver","role","onClick","name","href"],"sourceRoot":""}