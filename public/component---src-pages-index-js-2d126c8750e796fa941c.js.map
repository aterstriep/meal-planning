{"version":3,"file":"component---src-pages-index-js-2d126c8750e796fa941c.js","mappings":"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","sources":["webpack://meal-planning/./src/components/Badge.js","webpack://meal-planning/./src/components/recipes/RecipeContainer.js","webpack://meal-planning/./src/components/recipes/RecipeGrid.js","webpack://meal-planning/./src/components/recipes/RecipeFilters.js","webpack://meal-planning/./src/components/Pagination.js","webpack://meal-planning/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Badge = ({ children, className }) => {\n\n    return (\n        <span className={`badge ${className}`}>\n            {children}\n        </span>\n    )\n}\n\nexport default Badge","import React from 'react'\nimport { Link } from \"gatsby\"\n\nimport RecipeActions from './RecipeActions'\nimport Badge from \"../Badge\"\n\nexport default function RecipeContainer({ recipe, day, draggable = false, onDragStart = \"\", children, actions = ['add', 'save'], addRecipe, saveRecipe }) {\n\n    const RecipeContainerDiv = ({children}) => {\n        if(draggable) {\n            return (\n                <div draggable={draggable} onDragStart={(e) => onDragStart(e, recipe, day)} className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                    {children}\n                </div>\n            )\n        }\n        return (\n            <div className=\"recipe-container\" recipe_id={recipe.id} id={recipe.id} >\n                {children}\n            </div>\n        )\n    }\n\n    return (\n        <RecipeContainerDiv>\n\n            <RecipeActions\n                recipe={recipe}\n                actions={actions}\n                saveRecipe={saveRecipe}\n                addRecipe={() => addRecipe(recipe)}\n            />\n\n            <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}>\n                <div className=\"image-wrapper\">\n                    <img src={recipe.image} alt={recipe.title} />\n                </div>\n            </Link>\n\n            <div className=\"recipe-details\" padding=\"0\">\n                <div className=\"dish-types\">\n                    {recipe.dishTypes.map((type, index) => {\n                        return <Badge key={index}>{type}</Badge>\n                    })}\n                </div>\n\n                <Link to={`/recipe?${recipe.id}`} state={{ activeRecipe: recipe.id }}><h3>{recipe.title}</h3></Link>\n\n                {children}\n                \n            </div>\n\n        </RecipeContainerDiv>\n    )\n}\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\n\nimport RecipeContainer from \"./RecipeContainer\";\nimport MealPlanModal from \"./MealPlanModal\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst RecipeGrid = ({ recipes, actions = ['add', 'save'], saveRecipe, addRecipe}) => {\n\n    const [modalRecipe, setModalRecipe] = useState([]);\n\n    const triggerMealPlanModal = (recipe) => {\n        setModalRecipe(recipe);\n        document.getElementById(\"meal-plan-modal\").style.display = \"flex\";\n    }\n\n    if(recipes.length) {\n        return (\n            <>\n                <MealPlanModal recipe={modalRecipe} addRecipe={addRecipe} />\n                <div className=\"recipe-grid\">\n                    {recipes.map(recipe => {\n                        return (\n                            <RecipeContainer key={recipe.id} recipe={recipe} actions={actions} saveRecipe={saveRecipe} addRecipe={triggerMealPlanModal} />\n                        );\n                    })}\n                </div>\n            </>\n        )\n    }\n    return (\n        <p>You have not saved any recipes.</p>\n    )\n}\n\nexport default RecipeGrid\n","import React, {useEffect, useState} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useMediaQuery } from 'react-responsive'\n\nexport default function RecipeFilters({setQuery, query}) {\n\n    let newQuery = {};\n\n    const [search, setSearch] = useState(() => { return query.query || \"\" });\n    const [type, setType] = useState(() => {return query.type || \"\"});\n    const [intolerances, setIntolerances] = useState(() => {return query.intolerances || \"\"});\n\n    const dishTypes = ['Breakfast', 'Brunch', 'Lunch', 'Dinner', 'Dessert', 'Appetizer', 'Side Dish', 'Main Course', 'Salad', 'Soup', 'Snack', 'Bread', 'Beverage', 'Drink'];\n    const intolerancesOptions = [\"Dairy\", \"Egg\", \"Gluten\", \"Grain\", \"Peanut\", \"Seafood\", \"Shellfish\", \"Wheat\"];\n    \n\n    const handleTypeChange = (e) => {\n        setType(e.currentTarget.value);\n    }\n\n    const handleSearchChange = (e) => {\n        setSearch(e.currentTarget.value);\n    }\n\n    const handleIntolerancesChange = (e) => {\n        setIntolerances(e.currentTarget.value);\n    }\n\n    const filterFormSubmit = (e) => {\n\n        e.preventDefault();\n\n        newQuery = {\n            query: search || \"\",\n            type: type || \"\",\n            intolerances: intolerances || \"\"\n        }\n\n        setQuery(newQuery);\n\n    }\n\n    const FormButtons = () => {\n\n        const Submit = () => {\n            return (\n                <button\n                    onClick={(e) => filterFormSubmit(e)}\n                    id=\"filter-submit\"\n                    aria-label=\"Submit search recipes form\"\n                >\n                    <FontAwesomeIcon icon=\"search\" />\n                    Search\n                </button>\n            )\n        }\n\n        const Reset = () => {\n\n            return (\n                <button\n                    onClick={(e) => setQuery()}\n                    id=\"clear-filters\"\n                    className=\"clear-filters button-secondary\"\n                    aria-label=\"Reset Recipes\"\n                >\n                    Reset\n                </button>\n            )\n\n        }\n\n        return (\n            <div className=\"filter-buttons\">\n                <Submit />\n                <Reset />\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        if (document.getElementById(\"filter-form\")) {\n            document.getElementById(\"recipe-filters\").style.minHeight = document.getElementById(\"filter-form\").offsetHeight + \"px\";\n        }\n    }, [FormButtons])\n\n    return (\n        <div className=\"recipe-filters\" id=\"recipe-filters\" >\n            <form className=\"filter-form\" id=\"filter-form\">\n\n                <div className=\"field-wrapper\">\n                    <label htmlFor=\"recipe-search\">Search Recipes</label>\n                    <input\n                        type=\"text\"\n                        name=\"recipe-search\"\n                        placeholder=\"Search Recipes\"\n                        value={search}\n                        onChange={(e) => handleSearchChange(e)}\n                        aria-label=\"Search recipes\"\n                    />\n                </div>\n\n                <div className=\"field-wrapper\">\n                    <label htmlFor=\"dish-type\">Dish Types</label>\n                    <select\n                        name=\"dish-type\"\n                        onChange={(e) => handleTypeChange(e)}\n                        value={type}\n                        aria-label=\"Filter recipes by dish type\"\n                    >\n                        <option value=\"\">Select Dish Type</option>\n                        {dishTypes.sort().map(option => {\n                            return <option key={option} value={option.toLowerCase()}>{option}</option>\n                        })}\n                    </select>\n                </div>\n\n                <div className=\"field-wrapper\">\n                    <label htmlFor=\"intolerances\">Diet Restrictions</label>\n                    <select\n                        name=\"intolerances\"\n                        onChange={(e) => handleIntolerancesChange(e)}\n                        value={intolerances}\n                        aria-label=\"Exclude recipes from search\"\n                    >\n                        <option value=\"\">Select Diet Restriction</option>\n                        {intolerancesOptions.sort().map(option => {\n                            return <option key={option} value={option.toLowerCase()}>{option}</option>\n                        })}\n                    </select>\n                </div>\n\n                <FormButtons />\n\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function Pagination({perPage, total, page, updateQuery}) {\n\n    let pages = Math.ceil(total / perPage);\n    // console.log(total);\n\n    const handleClick = (e, pageNumber) => {\n        updateQuery({\n            offset: perPage * (pageNumber - 1)\n        });\n    }\n\n    const Numbers = () => {\n\n        let numbers = [page - 1, page, page + 1, page + 2];\n        numbers = numbers.filter(number => {\n            return (number >= 1) && (number <= pages)\n        });\n        numbers = numbers.slice(0, 3);\n\n        return numbers.map(number => {\n            let active = number === page ? \"active\" : \"\";\n            return <li role=\"tab\" key={number} onClick={(e) => handleClick(e, number)} className={`${active}`}>{number}</li>\n        });\n\n    }\n    return (\n        <ul className=\"pagination clearList\" role=\"tablist\">\n            <li role=\"tab\" onClick={(e) => handleClick(e, page - 1)} className={`page-arrow ${page === 1 ? \"disabled\" : \"\"}`} ><FontAwesomeIcon icon=\"angle-left\" /></li>\n            <Numbers />\n            <li role=\"tab\" onClick={(e) => handleClick(e, page + 1)} className={`page-arrow ${page === pages ? \"disabled\" : \"\"}`} ><FontAwesomeIcon icon=\"angle-right\" /></li>\n        </ul>\n    )\n\n}\n","import * as React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport RecipeGrid from '../components/recipes/RecipeGrid'\nimport RecipeFilters from \"../components/recipes/RecipeFilters\"\nimport Pagination from \"../components/Pagination\"\nimport { Helmet } from \"react-helmet\"\n\nimport useMealPlan from \"../hooks/useMealPlan\"\n\nconst IndexPage = () => {\n\n  const [recipes, setRecipes] = useState([]);\n  const [mealPlan, setMealPlan] = useMealPlan([]);\n  const [query, setQuery] = useState({\n    instructionsRequired: true,\n    addRecipeInformation: true,\n    sort: \"popularity\",\n    number: 12,\n    offset: 0,\n  });\n\n  const updateQuery = (newQuery) => {\n\n    if(newQuery) {\n\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n\n      if(!newQuery.offset) {\n        newQuery.offset = 0;\n      }\n      let parameters = Object.assign(query, newQuery);\n      setQuery({...parameters});\n\n    } else {\n\n      // Clear recipe query\n      setQuery({\n        instructionsRequired: true,\n        addRecipeInformation: true,\n        sort: \"popularity\",\n        number: 12,\n        offset: 0,\n      });\n\n    }\n\n  }\n\n  const addRecipe = (recipe, day) => {\n    setMealPlan(recipe, day);\n  }\n\n  const RecipeResults = ({recipes}) => {\n    \n    const ResultsCount = () => {\n      return <p id=\"search-total-results\">Your search returned {recipes.totalResults} recipes.</p>\n    }\n\n    if(recipes.totalResults > 0) {\n      // If recipes, return recipe grid\n      return  (\n        <>\n          <ResultsCount />\n          <RecipeGrid recipes={recipes.results} actions={false} addRecipe={addRecipe} />\n          <Pagination page={(query.offset / 12) + 1} perPage={12} total={recipes.totalResults} updateQuery={updateQuery} />\n        </>\n      )\n    }\n\n    // If no recipes, return\n    return <ResultsCount />;\n\n  }\n\n  useEffect(() => {\n\n      fetch('/.netlify/functions/recipes/complexSearch', {\n        headers: {\n          parameters: JSON.stringify(query)\n        }\n      })\n          .then(\n              response => response.json()\n          )\n          .then(\n              data => {\n                setRecipes(data);\n              }\n          );\n\n  }, [query])\n\n  return (\n    <Layout>\n      <Helmet>\n        <body className=\"index\" />\n        <title>Meal Planning App</title>\n        <meta name=\"icon\" href=\"../images/favicon.png\" />\n      </Helmet>\n      <RecipeFilters setQuery={updateQuery} query={query} />\n      <Container className=\"recipe-grid-wrap\">\n        <RecipeResults recipes={recipes} />\n      </Container>\n    </Layout>\n  )\n\n}\n\nexport default IndexPage"],"names":["children","className","RecipeContainer","recipe","day","draggable","onDragStart","actions","addRecipe","saveRecipe","RecipeContainerDiv","e","recipe_id","id","RecipeActions","to","state","activeRecipe","src","image","alt","title","padding","dishTypes","map","type","index","key","recipes","useState","modalRecipe","setModalRecipe","triggerMealPlanModal","document","getElementById","style","display","length","RecipeFilters","setQuery","query","search","setSearch","setType","intolerances","setIntolerances","FormButtons","Submit","onClick","preventDefault","filterFormSubmit","icon","Reset","useEffect","minHeight","offsetHeight","htmlFor","name","placeholder","value","onChange","currentTarget","handleSearchChange","handleTypeChange","sort","option","toLowerCase","handleIntolerancesChange","Pagination","perPage","total","page","updateQuery","pages","Math","ceil","handleClick","pageNumber","offset","Numbers","numbers","filter","number","slice","active","role","setRecipes","useMealPlan","setMealPlan","instructionsRequired","addRecipeInformation","newQuery","window","scrollTo","top","behavior","parameters","Object","assign","RecipeResults","ResultsCount","totalResults","RecipeGrid","results","fetch","headers","JSON","stringify","then","response","json","data","Layout","Helmet","href","Container"],"sourceRoot":""}